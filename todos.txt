- macros (may precipitate removal of abstract syntax in interpreter?)
- namespaces
- sequences 
- ' and quote
- compare to clojure basic read types
- Better error messages
- mutation / while loop
- lazy evaluation (want infinite lists, etc..)
- continuations (want a call/cc structure)
- objects/type system/define-type?
- tests
- add toWispString() to objects (for closure printing, etc..)
- implement each: (CL dolist more or less)
- Garbage collection & memory usage -> reason about this. Gut inclination is currently implementation eats up memory.